// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum GameType{
  UNO
}

enum GameStatus{
  ACTIVE
  FINISHED
  PENDING
}

model Game {
  gameId      Int          @id @default(autoincrement())
  players     Player[]
  gameHistory GameHistory?
  winner      Winner?
  gameType GameType
  gameStatus GameStatus @default(ACTIVE)
}

model Winner {
  id          Int    @id @default(autoincrement())
  gameId      Int    @unique
  discordId   String  @unique
  discordName String
  userName    String
  name        String
  game        Game   @relation(fields: [gameId], references: [gameId])
}

model Player {
  id          Int    @id @default(autoincrement())
  discordId   String @unique
  discordName String
  userName    String
  name        String
  game        Game[]
  moves       Move[]
}

model GameHistory {
  id     Int    @id @default(autoincrement())
  gameId Int    @unique
  game   Game   @relation(fields: [gameId], references: [gameId])
  moves  Move[]
}

model Move {
  id            Int         @id @default(autoincrement())
  playerId      Int
  player        Player      @relation(fields: [playerId], references: [id])
  cardId        Int         @unique
  card          Card        @relation(fields: [cardId], references: [id])
  gameHistoryId Int
  gameHistory   GameHistory @relation(fields: [gameHistoryId], references: [id])
}

model Card {
  id       Int    @id @default(autoincrement())
  cardName String
  moves    Move[]
}
